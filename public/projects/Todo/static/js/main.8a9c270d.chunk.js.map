{"version":3,"sources":["components/Todos/Todo.js","components/Todos/Todos.js","components/Infos/Infos.js","App.js","serviceWorker.js","index.js"],"names":["Todo","props","li_class","todo","done","push","editId","id","_jsxs","className","join","children","_jsx","type","onClick","onToggleTodoDone","checked","readOnly","onDoubleClickCapture","onEditId","title","onRemoveTodo","defaultValue","onKeyDown","onChangeTodoTitle","Todos","todosJsx","todos","filter","display","map","uniqid","Infos","nbTodos","length","nbDone","reduce","count","itemLeft","href","onChangeDisplay","onClearComplete","App","setTodos","useState","setDisplay","setEditId","toggleAll","setToggleAll","event","keyCode","target","value","placeholder","autoFocus","onToggleAll","newValue","htmlFor","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a9c270d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Todo = (props) => {\r\n\tconst li_class = [];\r\n\tif (props.todo.done) {\r\n\t\tli_class.push('completed');\r\n\t}\r\n\tif (props.editId === props.todo.id) {\r\n\t\tli_class.push('editing');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className={li_class.join(' ')}>\r\n\t\t\t<div className=\"view\">\r\n\t\t\t\t<input className=\"toggle\" type=\"checkbox\" onClick={() => props.onToggleTodoDone(props.todo.id)} checked={props.todo.done} readOnly />\r\n\t\t\t\t<label onDoubleClickCapture={() => props.onEditId(props.todo.id)}>{props.todo.title}</label>\r\n\t\t\t\t<button className=\"destroy\" onClick={() => props.onRemoveTodo(props.todo.id)}></button>\r\n\t\t\t</div>\r\n\t\t\t<input className=\"edit\" defaultValue={props.todo.title} onKeyDown={props.onChangeTodoTitle} />\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\nimport uniqid from 'uniqid';\r\n\r\nconst Todos = (props) => {\r\n\tconst listFiltered = props.todos.filter(\r\n\t\t(todo) => props.display === 'all' || (props.display === 'active' && todo.done === false) || (props.display === 'completed' && todo.done === true)\r\n\t);\r\n\tconst todosJsx = listFiltered.map((todo) => (\r\n\t\t<Todo\r\n\t\t\tdisplay={props.display}\r\n\t\t\teditId={props.editId}\r\n\t\t\tonEditId={props.onEditId}\r\n\t\t\tonToggleTodoDone={props.onToggleTodoDone}\r\n\t\t\tonRemoveTodo={props.onRemoveTodo}\r\n\t\t\tonChangeTodoTitle={props.onChangeTodoTitle}\r\n\t\t\ttodo={todo}\r\n\t\t\tkey={uniqid()}\r\n\t\t/>\r\n\t));\r\n\r\n\treturn <ul className=\"todo-list\">{todosJsx}</ul>;\r\n};\r\n\r\nexport default Todos;\r\n","import React from 'react';\r\n\r\nconst Infos = (props) => {\r\n\tconst nbTodos = props.todos.length;\r\n\tconst nbDone = props.todos.reduce((count, todo) => {\r\n\t\tif (todo.done) {\r\n\t\t\treturn count + 1;\r\n\t\t}\r\n\t\treturn count;\r\n\t}, 0);\r\n\tconst itemLeft = nbTodos - nbDone;\r\n\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span className=\"todo-count\">\r\n\t\t\t\t<strong>{itemLeft}</strong> item{itemLeft > 1 ? 's' : ''} left\r\n\t\t\t</span>\r\n\r\n\t\t\t<ul className=\"filters\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a className={props.display === 'all' ? 'selected' : ''} href=\"#/\" onClick={() => props.onChangeDisplay('all')}>\r\n\t\t\t\t\t\tAll\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#/active\" className={props.display === 'active' ? 'selected' : ''} onClick={() => props.onChangeDisplay('active')}>\r\n\t\t\t\t\t\tActive\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#/completed\" className={props.display === 'completed' ? 'selected' : ''} onClick={() => props.onChangeDisplay('completed')}>\r\n\t\t\t\t\t\tCompleted\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<button className=\"clear-completed\" onClick={props.onClearComplete}>\r\n\t\t\t\tClear completed ({nbDone})\r\n\t\t\t</button>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Infos;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport uniqid from 'uniqid';\nimport Todos from './components/Todos/Todos';\nimport Infos from './components/Infos/Infos'; \n\nconst App = () => {\n\t// --- states ---\n\n\tconst [todos, setTodos] = useState([]);\n\n\tconst [display, setDisplay] = useState('all');\n\n\tconst [editId, setEditId] = useState('');\n\n\tconst [toggleAll, setToggleAll] = useState(false);\n\n\t// --- Actions ---\n\n\tconst onClearComplete = () => {\n\t\tsetTodos(todos.filter((todo) => todo.done === false));\n\t};\n\n\tconst onAddInput = (event) => {\n\t\tif (event.keyCode === 13 && event.target.value !== '') {\n\t\t\tsetTodos([{ id: uniqid(), title: event.target.value, done: false }, ...todos]);\n\t\t\tevent.target.value = '';\n\t\t}\n\t};\n\n\tconst onToggleTodoDone = (id) => {\n\t\tsetTodos(\n\t\t\ttodos.map((todo) => {\n\t\t\t\tif (todo.id === id) todo.done = !todo.done;\n\t\t\t\treturn todo;\n\t\t\t})\n\t\t);\n\t};\n\n\tconst onRemoveTodo = (id) => {\n\t\tsetTodos(todos.filter((todo) => todo.id !== id));\n\t};\n\n\tconst onChangeTodoTitle = (event) => {\n\t\tif (event.keyCode === 13 && event.target.value !== '') {\n\t\t\tconst title = event.target.value;\n\t\t\tsetTodos(\n\t\t\t\ttodos.map((todo) => {\n\t\t\t\t\tif (todo.id === editId) todo.title = title;\n\t\t\t\t\treturn todo;\n\t\t\t\t})\n\t\t\t);\n\t\t\tsetEditId('');\n\t\t}\n\t};\n\n\tconst onToggleAll = () => {\n\t\tconst newValue = !toggleAll;\n\t\ttodos.map((todo) => {\n\t\t\ttodo.done = newValue;\n\t\t\treturn todo;\n\t\t});\n\t\tsetToggleAll(newValue);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<section className=\"todoapp\">\n\t\t\t\t<header className=\"header\">\n\t\t\t\t\t<h1>todos</h1>\n\t\t\t\t\t<input className=\"new-todo\" onKeyDown={onAddInput} placeholder=\"What needs to be done?\" autoFocus />\n\t\t\t\t</header>\n\n\t\t\t\t<section className=\"main\">\n\t\t\t\t\t<input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" checked={toggleAll} readOnly onClick={onToggleAll} />\n\t\t\t\t\t<label htmlFor=\"toggle-all\">Mark all as complete</label>\n\t\t\t\t\t<Todos\n\t\t\t\t\t\ttodos={todos}\n\t\t\t\t\t\tdisplay={display}\n\t\t\t\t\t\teditId={editId}\n\t\t\t\t\t\tonToggleTodoDone={onToggleTodoDone}\n\t\t\t\t\t\tonRemoveTodo={onRemoveTodo}\n\t\t\t\t\t\tonEditId={setEditId}\n\t\t\t\t\t\tonChangeTodoTitle={onChangeTodoTitle}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\n\t\t\t\t<Infos todos={todos} display={display} onChangeDisplay={setDisplay} onClearComplete={onClearComplete} />\n\t\t\t</section>\n\t\t\t<footer className=\"info\">\n\t\t\t\t<p>Double-click to edit a todo</p>\n\n\t\t\t\t<p>\n\t\t\t\t\tTemplate by <a href=\"http://sindresorhus.com\">Sindre Sorhus</a>\n\t\t\t\t</p>\n\n\t\t\t\t<p>\n\t\t\t\t\tCreated by <a href=\"http://todomvc.com\">you</a>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tPart of <a href=\"http://todomvc.com\">TodoMVC</a>\n\t\t\t\t</p>\n\t\t\t</footer>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}